name: .NET

on: [push]

env:
  DOTNET_SDK_VERSION: '6.0.100-rc.2.21430.7'
  INCLUDE_PRERELEASE: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
        include-prerelease: ${{ env.INCLUDE_PRERELEASE }}
    - name: Setup Node.js
      uses: actions/setup-node@v2.1.5
    - name: Install TypeScript and typedoc
      run: sudo npm install -g typescript@4.2.* typedoc@0.20.*
    - name: Build with dotnet
      run: dotnet build
    - name: Test with dotnet
      run: dotnet test

  publish-managed:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
        include-prerelease: ${{ env.INCLUDE_PRERELEASE }}
    - name: Publish Windows x86 Release
      run: dotnet publish TypedocConverter -c Release -o WindowsBuildx86 -r win-x86 --no-self-contained /p:PublishSingleFile=true
    - name: Publish Windows x64 Release
      run: dotnet publish TypedocConverter -c Release -o WindowsBuildx64 -r win-x64 --no-self-contained /p:PublishSingleFile=true
    - name: Publish Windows ARM Release
      run: dotnet publish TypedocConverter -c Release -o WindowsBuildARM -r win-arm --no-self-contained /p:PublishSingleFile=true
    - name: Publish Windows ARM64 Release
      run: dotnet publish TypedocConverter -c Release -o WindowsBuildARM64 -r win-arm64 --no-self-contained /p:PublishSingleFile=true
    - name: Publish Linux x64 Release
      run: dotnet publish TypedocConverter -c Release -o LinuxBuildx64 -r linux-x64 --no-self-contained /p:PublishSingleFile=true
    - name: Publish Linux ARM Release
      run: dotnet publish TypedocConverter -c Release -o LinuxBuildARM -r linux-arm --no-self-contained /p:PublishSingleFile=true
    - name: Publish Linux ARM64 Release
      run: dotnet publish TypedocConverter -c Release -o LinuxBuildARM64 -r linux-arm64 --no-self-contained /p:PublishSingleFile=true
    - name: Publish macOS x64 Release
      run: dotnet publish TypedocConverter -c Release -o macOSBuildx64 -r osx-x64 --no-self-contained /p:PublishSingleFile=true
    - name: Upload Windows x86 artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Windows_x86
        path: WindowsBuildx86
    - name: Upload Windows x64 artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Windows_x64
        path: WindowsBuildx64
    - name: Upload Windows ARM artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Windows_ARM
        path: WindowsBuildARM
    - name: Upload Windows ARM64 artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Windows_ARM64
        path: WindowsBuildARM64
    - name: Upload Linux x64 artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Linux_x64
        path: LinuxBuildx64
    - name: Upload Linux ARM artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Linux_ARM
        path: LinuxBuildARM
    - name: Upload Linux ARM64 artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Linux_ARM64
        path: LinuxBuildARM64
    - name: Upload macOS x64 artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: macOS_x64
        path: macOSBuildx64

  publish-native-windows:
    runs-on: windows-latest
    needs: build-and-test

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
        include-prerelease: ${{ env.INCLUDE_PRERELEASE }}
    - name: Publish Native Windows x64 Release
      run: |
        dotnet publish TypedocConverter -c Release -r win-x64 -o WindowsNativeBuildx64 /p:NativeBuild=true
        del WindowsNativeBuildx64\*.pdb
    - name: Upload Windows x64 native artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Windows_x64_Native
        path: WindowsNativeBuildx64
    - name: Publish Native Windows ARM64 Release
      run: |
        dotnet publish TypedocConverter -c Release -r win-arm64 -o WindowsNativeBuildARM64 /p:NativeBuild=true
        del WindowsNativeBuildARM64\*.pdb
    - name: Upload Windows ARM64 native artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Windows_ARM64_Native
        path: WindowsNativeBuildARM64

  publish-native-linux:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
        include-prerelease: ${{ env.INCLUDE_PRERELEASE }}
    - name: Install Kerberos 5 library
      run: |
        sudo apt update
        sudo apt install -y libkrb5-dev
    - name: Publish Native Linux x64 Release
      run: |
        dotnet publish TypedocConverter -c Release -r linux-x64 -o LinuxNativeBuildx64 /p:NativeBuild=true
        rm LinuxNativeBuildx64/*.pdb
        strip LinuxNativeBuildx64/TypedocConverter
    - name: Upload Linux x64 native artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Linux_x64_Native
        path: LinuxNativeBuildx64
  
  publish-native-linux-arm64:
    runs-on: ubuntu-latest
    needs: build-and-test
    container: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-20201022204150-b2c2436

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
        include-prerelease: ${{ env.INCLUDE_PRERELEASE }}
    - name: Publish Native Linux ARM64 Release
      run: |
        dotnet publish TypedocConverter -c Release -r linux-arm64 -o LinuxNativeBuildARM64 /p:NativeBuild=true /p:CppCompilerAndLinker=clang-9 /p:SysRoot=/crossrootfs/arm64
        rm LinuxNativeBuildARM64/*.pdb
        aarch64-linux-gnu-strip LinuxNativeBuildARM64/TypedocConverter
    - name: Upload Linux ARM64 native artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: Linux_ARM64_Native
        path: LinuxNativeBuildARM64

  publish-native-macos:
    runs-on: macos-latest
    needs: build-and-test

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_SDK_VERSION }}
        include-prerelease: ${{ env.INCLUDE_PRERELEASE }}
    - name: Publish Native macOS x64 Release
      run: |
        dotnet publish TypedocConverter -c Release -r osx-x64 -o macOSNativeBuildx64 /p:NativeBuild=true
        rm macOSNativeBuildx64/*.pdb
        strip macOSNativeBuildx64/TypedocConverter
    - name: Upload macOS x64 native artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: macOS_x64_Native
        path: macOSNativeBuildx64
